import java.io.IOException;
import java.io.Reader;
import java.io.StringReader;

/** Jam Interpreter */
class Interpreter {
    
    public static void main(String[] args) {
        String p = "letrec x:=map x to x*x; y:=map y to x(y+1); in y(2)";
        Interpreter i = new Interpreter(new StringReader(p));
        System.out.println(i.eval());
    }

    /** Abstract Syntax Tree generated by the parser */
    private AST ast;

    /** Constructor */
    Interpreter(String fileName) throws IOException { this(new Parser(fileName)); }

    /** Constructor */
    Interpreter(Reader reader) { this(new Parser(reader)); }

    /** Constructor */
    Interpreter(Parser p) { this(p.parse()); }

    /** Constructor */
    Interpreter(AST ast) { this.ast = ast; }

    /** Interprets the program using a call-by-value calling convention and a cons-by-value cons convention */
    public JamVal eval() {
        Context.check(ast);
        return this.ast.accept(
                new ASTInterpreter(
                        new Empty<Binding>(),
                        new EvaluationPolicy(EvaluationType.BY_VALUE, EvaluationType.BY_VALUE)
                        )
                );
    }
    
    public AST unshadow() { return null; }
    public AST convertToCPS() { return null; }
    public JamVal cpsEval() { return null; }
    public AST convertToSD() { return null; }
    public JamVal SDEval() { return null; }
    public JamVal SDCpsEval() { return null; }
}


